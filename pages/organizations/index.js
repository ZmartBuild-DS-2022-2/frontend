import { useFetch } from "../../hooks/useFetch"
import Head from "next/head"
import Link from "next/link"
import Header from "../../components/header/Header"
import { useUser } from "../../hooks/useUser"
import { useEffect } from "react"
import { useRouter } from "next/router"
import PageSpinner from "../../components/PageSpinner"
import OrganizationCard from "../../components/organizations/OrganizationCard"
import { PlusIcon } from "@heroicons/react/24/solid"

export default function Organizations() {
  const [organizations, isLoading, error] = useFetch({ url: "/organizations", method: "get" })
  const [isAuthenticated, isLoadingUser] = useUser()
  const router = useRouter()

  useEffect(() => {
    if (!isLoadingUser && !isAuthenticated) {
      router.push("/login")
    }
  }, [router, isAuthenticated, isLoadingUser])

  return (
    <>
      <Head>
        <title>Organizations - ZmartBuild</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!isAuthenticated || isLoadingUser ? (
        <div className="grid h-screen place-items-center">
          <PageSpinner />
        </div>
      ) : (
        <>
          <Header />

          <main>
            <div className="flex-col items-center text-center my-5 md:my-8">
              <h1 className="text-3xl md:text-4xl lg:text-5xl font-semibold">My Organizations</h1>
            </div>

            {isLoading && !error && (
              <div className="grid h-screen place-items-center">
                <PageSpinner />
              </div>
            )}

            {!isLoading && error && <div>{JSON.stringify(error)}</div>}

            <div className="flex justify-center items-center my-3 md:my-5">
              <Link href="/organizations/new">
                <a>
                  <div
                    className="flex justify-center items-center gap-2 rounded-md px-2 
                      sm:px-4 py-1.5 disabled:opacity-30 transition-all duration-150 bg-primary 
                      text-primary-contrast hover:bg-primary-hover text-xs sm:text-base"
                  >
                    <PlusIcon className="h-5 md:h-6 aspect-square fill-white" /> New organization
                  </div>
                </a>
              </Link>
            </div>

            {organizations && (
              <section className="flex justify-center items-center">
                <div className="inline-flex flex-col items-center gap-4 px-5 w-full ">
                  {organizations.map((organization) => {
                    return <OrganizationCard key={organization.id} data={organization} />
                  })}
                </div>
              </section>
            )}
          </main>
        </>
      )}
    </>
  )
}
