/* eslint-disable max-len */
import { useFetch } from "../../hooks/useFetch"
import Head from "next/head"
import Header from "../../components/header/Header"
import { useUser } from "../../hooks/useUser"
import { useEffect } from "react"
import { useRouter } from "next/router"
import PageSpinner from "../../components/PageSpinner"
import ProjectInfo from "../../components/projects/ProjectInfo"

export default function Home() {
  const [isAuthenticated, isLoadingUser] = useUser()
  const router = useRouter()

  const [projectData, isLoading, error] = useFetch({
    url: `/projects/${router.query.id}`,
    method: "get",
  })

  const [subprojects, subprojectsLoading] = useFetch({
    url: `/subprojects`,
    method: "get",
    params: { projectId: `${router.query.id}` },
  })

  useEffect(() => {
    if (!isLoadingUser && !isAuthenticated) router.push("/login")
  }, [router, isAuthenticated, isLoadingUser])

  useEffect(() => {
    if (!isLoading && error && error.response.status == "401") router.push("/")
  }, [router, isLoading, error])

  return (
    <>
      <Head>
        <title>ZmartBuild</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {!isAuthenticated || isLoadingUser ? (
        <div className="grid h-screen place-items-center">
          <PageSpinner />
        </div>
      ) : (
        <>
          <Header />
          <main>
            {(isLoading || subprojectsLoading) && !error && (
              <div className="grid h-screen place-items-center">
                <PageSpinner />
              </div>
            )}

            {!error ? <ProjectInfo projectData={projectData} subprojects={subprojects} /> : null}
          </main>
        </>
      )}
    </>
  )
}
